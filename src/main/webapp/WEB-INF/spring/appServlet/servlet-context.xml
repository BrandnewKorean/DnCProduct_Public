<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.project.ex01" />
	
	<!-- MultipartResolver 설정 -->
    <beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"></beans:bean>
    
    <beans:bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
    	<beans:property name="host" value="smtp.gmail.com"/>
    	<beans:property name="port" value="587"/>
    	<beans:property name="username" value="javadevelopersystem@gmail.com"/>
    	<beans:property name="password" value="rlaqudrms12@"/>
    	<beans:property name="javaMailProperties">
    		<beans:props>
    			<beans:prop key="mail.smtp.auth">true</beans:prop>
    			<beans:prop key="mail.smtp.starttls.enable">true</beans:prop>
    		</beans:props>
    	</beans:property>
    </beans:bean>
    
    <beans:bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
		<beans:property name="url" value="jdbc:oracle:thin:@127.0.0.1:1521:orcl"/>
		<beans:property name="username" value="system"/>
		<beans:property name="password" value="oracle"/>
	</beans:bean>
	
	<!-- Mybatis 설정 -->
	<beans:bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource"/>
		<!-- MyBatis 설정 파일의 위치를 지정  : 스프링 동작시 같이 동작 하도록 -->
		<beans:property name="configLocation" value="classpath:/mybatis-config.xml" />
		<!-- SQL문이 있는 xml파일(mapper) 의 위치를 지정합니다. 
		 	=> mappers 폴더내의 모든 폴더의 *Mapper.xml 을 인식하도록 해줌  --> 
		<beans:property name="mapperLocations" value="classpath:/mappers/*.xml" />
	</beans:bean>
	
	<beans:bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate"
								destroy-method="clearCache">
		<beans:constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory" />						
	</beans:bean>
</beans:beans>
